@startuml 
class NormApi
{
    + {static} NormGetVersion(major:int, minor:int, patch:int) : int
    + {static} NormCreateInstance() : nuint
    + {static} NormCreateInstance(priorityBoost:bool) : nuint
    + {static} NormDestroyInstance(instanceHandle:nuint) : void
    + {static} NormStopInstance(instanceHandle:nuint) : void
    + {static} NormRestartInstance(instanceHandle:nuint) : bool
    + {static} NormSuspendInstance(instanceHandle:nuint) : bool
    + {static} NormResumeInstance(instanceHandle:nuint) : void
    + {static} NormSetCacheDirectory(instanceHandle:nuint, cachePath:string) : bool
    + {static} NormGetNextEvent(instanceHandle:nuint, theEvent:NormEvent) : bool 
    + {static} NormGetNextEvent(instanceHandle:nuint, theEvent:NormEvent, waitForEvent:bool) : bool 
    + {static} NormGetDescriptor(instanceHandle:nuint) : NormDescriptor 
    + {static} NormCreateSession(instanceHandle:nuint, sessionAddress:string, sessionPort:ushort, localNodeId:uint) : nuint 
    + {static} NormDestroySession(sessionHandle:nuint) : void 
    + {static} NormGetInstance(sessionHandle:nuint) : nuint
    + {static} NormIsUnicastAddress(address:string) : bool
    + {static} NormSetUserData(sessionHandle:nuint, userData:nuint) : void
    + {static} NormGetUserData(sessionHandle:nuint) : nuint
    + {static} NormSetUserTimer(sessionHandle:nuint, seconds:double) : void
    + {static} NormCancelUserTimer(sessionHandle:nuint) : void
    + {static} NormGetLocalNodeId(sessionHandle:nuint) : uint
    + {static} NormGetAddress(sessionHandle:nuint, addrBuffer:string, bufferLen:uint)  : bool
    + {static} NormGetAddress(sessionHandle:nuint, addrBuffer:string, bufferLen:uint, port:ushort)  : bool
    + {static} NormGetRxPort(sessionHandle:nuint) : ushort
    + {static} NormSetTxPort(sessionHandle:nuint, txPortNumber:ushort) : bool
    + {static} NormSetTxPort(sessionHandle:nuint, txPortNumber:ushort, enableReuse:bool, txBindAddress:string) : bool 
    + {static} NormGetTxPort(sessionHandle:nuint) : ushort
    + {static} NormSetTxOnly(sessionHandle:nuint, txOnly:bool) : void 
    + {static} NormSetTxOnly(sessionHandle:nuint, txOnly:bool, connectToSessionAddress:bool) : void 
    + {static} NormLimitObjectInfo(sessionHandle:nuint, state:bool) : void
    + {static} NormPresetObjectInfo(sessionHandle:nuint, objectSize:ulong, segmentSize:ushort, numData:ushort, numParity:ushort) : bool 
    + {static} NormSetId(sessionHandle:nuint, normId:uint) : void
    + {static} NormChangeDestination(sessionHandle:nuint, sessionAddress:string, sessionPort:ushort) :bool
    + {static} NormChangeDestination(sessionHandle:nuint, sessionAddress:string, sessionPort:ushort, connectToSessionAddress:bool) : bool 
    + {static} NormSetServerListner(sessionHandle:nuint, state:bool) : void
    + {static} NormTransferSender(sessionHandle:nuint, sender:nuint) : bool 
    + {static} NormSetRxPortReuse(sessionHandle:nuint, enableReuse:bool) : void
    + {static} NormSetRxPortReuse(sessionHandle:nuint, enableReuse:bool, rxBindAddress:string, senderAddress:string, senderPort:ushort) : void 
    + {static} NormGetRxBindAddress(sessionHandle:nuint, addr:string, addrLen:uint, port:ushort) : bool 
    + {static} NormSetEcnSupport(sessionHandle:nuint, ecnEnable:bool) : void
    + {static} NormSetEcnSupport(sessionHandle:nuint, ecnEnable:bool, ignoreLoss:bool, tolerateLoss:bool) : void 
    + {static} NormSetMulticastInterface(sessionHandle:nuint, interfaceName:string) : bool 
    + {static} NormSetSSM(sessionHandle:nuint, sourceAddress:string) : bool 
    + {static} NormSetTTL(sessionHandle:nuint, ttl:byte) : bool 
    + {static} NormSetTOS(sessionHandle:nuint, tos:byte) : bool 
    + {static} NormSetLoopback(sessionHandle:nuint, loopback:bool) : bool
    + {static} NormSetMulticastLoopback(sessionHandle:nuint, loopback:bool) : bool
    + {static} NormSetFragmentation(sessionHandle:nuint, fragmentation:bool) : bool
    + {static} NormSetMessageTrace(sessionHandle:nuint, state:bool) : void
    + {static} NormSetTxLoss(sessionHandle:nuint, precent:double) : void
    + {static} NormSetRxLoss(sessionHandle:nuint, precent:double) : void
    + {static} NormOpenDebugLog(instanceHandle:nuint, path:string) : bool 
    + {static} NormCloseDebugLog(instanceHandle:nuint) : void
    + {static} NormOpenDebugPipe(instanceHandle:nuint, pipeName:string) : bool 
    + {static} NormCloseDebugPipe(instanceHandle:nuint) : void
    + {static} NormSetDebugLevel(level:uint) : void 
    + {static} NormGetDebugLevel() : uint
    + {static} NormSetReportInterval(sessionHandle:nuint, interval:double) : void
    + {static} NormGetReportInterval(sessionHandle:nuint) : double
    + {static} NormGetRandomSessionId() : NormSessionId 
    + {static} NormStartSender(sessionHandle:nuint, instanceId:NormSessionId, bufferSpace:uint, segmentSize:ushort, numData:ushort, numParity:ushort) : bool
    + {static} NormStartSender(sessionHandle:nuint, instanceId:NormSessionId, bufferSpace:uint, segmentSize:ushort, numData:ushort, numParity:ushort, fecId:byte) : bool 
    + {static} NormStopSender(sessionHandle:nuint) : void
    + {static} NormSetTxRate(sessionHandle:nuint, bitsPerSecond:double) : void
    + {static} NormGetTxRate(sessionHandle:nuint): double
    + {static} NormSetTxSocketBuffer(sessionHandle:nuint, bufferSize:uint) : bool 
    + {static} NormSetFlowControl(sessionHandle:nuint, flowControlFactor:double) : void
    + {static} NormSetCongestionControl(sessionHandle:nuint, enable:bool) : void 
    + {static} NormSetCongestionControl(sessionHandle:nuint, enable:bool, adjustRate:bool) : void 
    + {static} NormSetTxRateBounds(sessionHandle:nuint, rateMin:double, rateMax:double) : void
    + {static} NormSetTxCacheBounds(sessionHandle:nuint, sizeMax:NormSize, countMin:uint, countMax:uint) : void 
    + {static} NormSetAutoParity(sessionHandle:nuint, autoParity:byte) : void 
    + {static} NormSetGrttEstimate(sessionHandle:nuint, grttEstimate:double) : void
    + {static} NormGetGrttEstimate(sessionHandle:nuint) : double
    + {static} NormSetGrttMax(sessionHandle:nuint, grttMax:double) : void
    + {static} NormSetGrttProbingMode(sessionHandle:nuint, probingMode:NormProbingMode) : void 
    + {static} NormSetGrttProbingInterval(sessionHandle:nuint, intervalMin:double, intervalMax:double) : void
    + {static} NormSetGrttProbingTOS(sessionHandle:nuint, probeTOS:byte) : void 
    + {static} NormSetBackoffFactor(sessionHandle:nuint, backoffFactor:double) : void
    + {static} NormSetGroupSize(sessionHandle:nuint, groupSize:uint) : void 
    + {static} NormSetTxRobustFactor(sessionHandle:nuint, robustFactor:int) : void
    + {static} NormFileEnqueue(sessionHandle:nuint, fileName:string): nuint
    + {static} NormFileEnqueue(sessionHandle:nuint, fileName:string, infoPtr:string, infoLen:uint): nuint 
    + {static} NormDataEnqueue(sessionHandle:nuint, dataPtr:string, dataLen:uint) : nuint
    + {static} NormDataEnqueue(sessionHandle:nuint, dataPtr:string, dataLen:uint, infoPtr:string, infoLen:uint) : nuint 
    + {static} NormRequeueObject(sessionHandle:nuint, objectHandle:nuint) : bool
    + {static} NormStreamOpen(sessionHandle:nuint, bufferSize:uint) : nuint 
    + {static} NormStreamOpen(sessionHandle:nuint, bufferSize:uint, infoPtr:string, infoLen:uint) : nuint 
    + {static} NormObjectSetUserData(objectHandle:nuint, userData:nuint) : void 
    + {static} NormObjectGetUserData(objectHandle:nuint) : nuint
    + {static} NormStreamClose(streamHandle:nuint)  void 
    + {static} NormStreamClose(streamHandle:nuint, graceful:bool)  void 
    + {static} NormGetStreamBufferSegmentCount(bufferBytes:uint, segmentSize:ushort, blockSize:ushort) : uint
    + {static} NormStreamWrite(streamHandle:nuint, buffer:string, numBytes:uint) : uint
    + {static} NormStreamFlush(streamHandle:nuint) : void 
    + {static} NormStreamFlush(streamHandle:nuint, eom:bool, flushMode:NormFlushMode) : void 
    + {static} NormStreamSetAutoFlush(streamHandle:nuint, flushMode: NormFlushMode) : void
    + {static} NormStreamSetPushEnable(streamHandle:nuint, pushEnable:bool) : void
    + {static} NormStreamHasVacancy(streamHandle:nuint) : bool
    + {static} NormStreamGetVacancy(streamHandle:nuint, bytesWanted:uint) : uint
    + {static} NormStreamMarkEom(streamHandle:nuint) : void
    + {static} NormSetWatermark(sessionHandle:nuint, objectHandle:nuint) : bool
    + {static} NormSetWatermark(sessionHandle:nuint, objectHandle:nuint, overrideFlush:bool) : bool
    + {static} NormSetWatermarkEx(sessionHandle:nuint, objectHandle:nuint, buffer:string, numBytes:uint) : bool
    + {static} NormSetWatermarkEx(sessionHandle:nuint, objectHandle:nuint, buffer:string, numBytes:uint, overrideFlush:bool) : bool
    + {static} NormResetWatermark(sessionHandle:nuint) : bool
    + {static} NormCancelWatermark(sessionHandle:nuint) : void
    + {static} NormAddAckingNode(sessionHandle:nuint, nodeId:uint) : bool
    + {static} NormRemoveAckingNode(sessionHandle:nuint, nodeId:uint) : void
    + {static} NormGetAckingNodeHandle(sessionHandle:nuint, nodeId:uint) : nuint
    + {static} NormSetAutoAckingNodes(sessionHandle:nuint, trackingStatus:NormTrackingStatus) : void
    + {static} NormGetAckingStatus(sessionHandle:nuint) : NormAckingStatus
    + {static} NormGetAckingStatus(sessionHandle:nuint, nodeId:uint) : NormAckingStatus
    + {static} NormGetNextAckingNode(sessionHandle:nuint, nodeId:uint) : bool
    + {static} NormGetNextAckingNode(sessionHandle:nuint, nodeId:uint, ackingStatus:NormAckingStatus) : bool
    + {static} NormGetAckEx(sessionHandle:nuint, nodeId:uint, buffer:string, buflen:uint) : bool
    + {static} NormSendCommand(sessionHandle:nuint, cmdBuffer:string, cmdLength:uint) : bool
    + {static} NormSendCommand(sessionHandle:nuint, cmdBuffer:string, cmdLength:uint, robust:bool) : bool
    + {static} NormCancelCommand(sessionHandle:nuint) : void
    + {static} NormSetSynStatus(sessionHandle:nuint, state:bool) : void
    + {static} NormStartReceiver(sessionHandle:nuint, bufferSpace:uint) : bool
    + {static} NormStopReceiver(sessionHandle:nuint) : void
    + {static} NormSetRxCacheLimit(sessionHandle:nuint, countMax:ushort) : void
    + {static} NormSetRxSocketBuffer(sessionHandle:nuint, bufferSize:uint) : bool
    + {static} NormSetSilentReceiver(sessionHandle:nuint, silent:bool) : void
    + {static} NormSetSilentReceiver(sessionHandle:nuint, silent:bool, maxDelay:int) : void
    + {static} NormSetDefaultUnicastNack(sessionHandle:nuint, unicastNacks:bool) : void
    + {static} NormNodeSetUnicastNack(remoteSender:nuint, unicastNacks:bool) : void
    + {static} NormSetDefaultSyncPolicy(sessionHandle:nuint, syncPolicy:NormSyncPolicy) : void
    + {static} NormSetDefaultNackingMode(sessionHandle:nuint, nackingMode:NormNackingMode) : void
    + {static} NormNodeSetNackingMode(remoteSender:nuint, nackingMode:NormNackingMode) : void
    + {static} NormObjectSetNackingMode(objectHandle:nuint, nackingMode:NormNackingMode) : void
    + {static} NormSetDefaultRepairBoundary(sessionHandle:nuint, repairBoundary:NormRepairBoundary) : void
    + {static} NormNodeSetRepairBoundary(remoteSender:nuint, repairBoundary:NormRepairBoundary) : void
    + {static} NormSetDefaultRxRobustFactor(sessionHandle:nuint, robustFactor:int) : void
    + {static} NormNodeSetRxRobustFactor(remoteSenderremoteSender, robustFactor:int) : void
    + {static} NormPreallocateRemoteSender(sessionHandle:nuint, bufferSize:ulong, segmentSize:ushort, numData:ushort, numParity:ushort) : bool
    + {static} NormPreallocateRemoteSender(sessionHandle:nuint, bufferSize:ulong, segmentSize:ushort, numData:ushort, numParity:ushort, streamBufferSize:uint) : bool
    + {static} NormStreamRead(streamHandle:nuint, buffer:string, numBytes:uint) : bool
    + {static} NormStreamSeekMsgStart(streamHandle:nuint) : bool
    + {static} NormStreamGetReadOffset(streamHandle:nuint) : uint
    + {static} NormStreamGetBufferUsage(streamHandle:nuint) : uint
    + {static} NormObjectGetType(objectHandle:nuint) : NormObjectType
    + {static} NormObjectHasInfo(objectHandle:nuint) : bool
    + {static} NormObjectGetInfoLength(objectHandle:nuint) : ushort
    + {static} NormObjectGetInfo(objectHandle:nuint, buffer:char, bufferLen:ushort) : ushort
    + {static} NormObjectGetSize(objectHandle:nuint) : NormSize
    + {static} NormObjectGetBytesPending(objectHandle:nuint) : NormSize
    + {static} NormObjectCancel(objectHandle:nuint) : void
    + {static} NormObjectRetain(objectHandle:nuint) : void
    + {static} NormObjectRelease(objectHandle:nuint) : void
    + {static} NormFileGetName(fileHandle:nuint, nameBuffer:string, bufferLen:uint) : bool
    + {static} NormFileRename(fileHandle:nuint, fileName:string) : bool
    + {static} NormDataAccessData(objectHandle:nuint) : string
    + {static} NormDataDetachData(objectHandle:nuint) : string
    + {static} NormAlloc(numBytes:nuint) : string
    + {static} NormFree(dataPtr:string) : void
    + {static} NormObjectGetSender(objectHandle:nuint) : nuint
    + {static} NormNodeGetId(nodeHandle:nuint) : uint
    + {static} NormNodeGetAddress(nodeHandle:nuint, addrBuffer:string, bufferLen: uint) : bool
    + {static} NormNodeGetAddress(nodeHandle:nuint, addrBuffer:string, bufferLen: uint, port:ushort) : bool
    + {static} NormNodeSetUserData(nodeHandle:nuint, userData:nuint) : void
    + {static} NormNodeGetUserData(nodeHandle:nuint) : nuint
    + {static} NormNodeGetGrtt(remoteSender:nuint) : double
    + {static} NormNodeGetCommand(remoteSender:nuint, :string, buflen:uint) : bool
    + {static} NormNodeSendAckEx(remoteSender:nuint, buffer:string, numBytes:uint) : bool
    + {static} NormNodeGetWatermarkEx(remoteSender:nuint, buffer:string, buflen:uint) : bool
    + {static} NormNodeFreeBuffers(remoteSender:nuint) : void
    + {static} NormNodeDelete(remoteSender:nuint) : void
    + {static} NormNodeRetain(nodeHandle:nuint) : void
    + {static} NormNodeRelease(nodeHandle:nuint) : void
    + {static} NormReleasePreviousEvent(instanceHandle:nuint) : void
    + {static} NormCountCompletedObjects(sessionHandle:nuint) : uint
    + {static} NormNodeSetAutoDelete(remoteSender:nuint, autoDelete:bool) : void
    + {static} NormNodeAllowSender(senderId:uint) : bool
    + {static} NormNodeDenySender(senderId:uint) : bool
}
@enduml